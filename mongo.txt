1. Create a collection named orders.
  db.createCollection('orders')

2. Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields.
  db.getCollection('orders').insert({
  orderDate: new Date("2015-11-30"),
  orderTotal: 10.00,
  lineItems: [{
  unitPrice: 1.00,
  quantity: 5,
  productName: "peach"},
  {unitPrice: 2.00,
  quantity: 3,
  productName: "apple"},
  {unitPrice: 3.00,
  quantity: 2,
  productName: "orange"}
  ]});

3. Find a single order document, any order document.
  db.getCollection('orders').find({orderTotal: 10.00})

4. Find all orders and make them look pretty.
  db.getCollection('orders').find().pretty()

5. Find all orders with an orderDate that is prior to 1/1/2016.
  db.getCollection('orders').find({'orderDate':{$lt: new Date('1/1/2016')}})

6. Find all orders with an orderDate that is after 1/1/2016.
  db.getCollection('orders').find({'orderDate':{$gt: new Date('1/1/2016')}})

7. Find orders with lineItems that have a quantity that is less than 50, but greater than 5.
  db.getCollection('orders').find({$and : [{"lineItems.quantity": {$lt: 50}, "lineItems.quantity": {$gt: 50}}]})

8. Update one of your line items to 42.99.
  db.getCollection('orders').update({"_id" : ObjectId("583f5d837c09136b4e00e276")}, {$set: {"lineItems.1.unitPrice": 42.99} })

9. Remove one of your orders.
  db.getCollection('orders').remove({"_id" : ObjectId("583cd0b4482c7736c1d27058")}) 583cd0b4482c7736c1d27058
